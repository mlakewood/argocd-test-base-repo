name: Deploy to python demo app

on:
  push:
    branches: [main]

jobs:
  build:
    name: Build and Publish Image
    runs-on: self-hosted
    # container:
    #   image: 220445851985.dkr.ecr.ap-southeast-2.amazonaws.com/customized-runner:latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set outputs
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-southeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build Front App
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: front-app
          GIT_SHA: ${{ steps.vars.outputs.sha_short }}
          BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
        run: |
          docker build --target front-app -t $ECR_REGISTRY/$ECR_REPOSITORY:$BRANCH_NAME-$GIT_SHA .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$BRANCH_NAME-$GIT_SHA

      - name: Build Back App
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: back-app
          GIT_SHA: ${{ steps.vars.outputs.sha_short }}
          BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
        run: |
          docker build --target back-app -t $ECR_REGISTRY/$ECR_REPOSITORY:$BRANCH_NAME-$GIT_SHA .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$BRANCH_NAME-$GIT_SHA

      - name: Build integration tests image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: argocd-test-integration-tests
          GIT_SHA: ${{ steps.vars.outputs.sha_short }}
          BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
        run: |
          docker build --target integration-tests -t $ECR_REGISTRY/$ECR_REPOSITORY:$BRANCH_NAME-$GIT_SHA .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$BRANCH_NAME-$GIT_SHA

      - name: Unit tests
        run: echo "looks like you havent run any tests??"

      - name: Install Kustomize
        uses: imranismail/setup-kustomize@v2
      
      - name: install kustomize
        working-directory: deployment/prod
        env:
          GIT_SHA: ${{ steps.vars.outputs.sha_short }}
          BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
        run: |
          # curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash
          kustomize edit set image "front-app=220445851985.dkr.ecr.ap-southeast-2.amazonaws.com/front-app:$BRANCH_NAME-$GIT_SHA"
          kustomize edit set image "back-app=220445851985.dkr.ecr.ap-southeast-2.amazonaws.com/back-app:$BRANCH_NAME-$GIT_SHA"
          kustomize edit set image "integration-tests=220445851985.dkr.ecr.ap-southeast-2.amazonaws.com/argocd-test-integration-tests:$BRANCH_NAME-$GIT_SHA"
          
      - name: "Kustomize Build"
        id: kustomize
        uses: karancode/kustomize-github-action@master
        with:
          kustomize_version: "4.5.7"
          kustomize_build_dir: "deployment/prod"
          kustomize_comment: true
          kustomize_output_file: "new_deployment/deployment.yaml"
        env:
          GITHUB_ACCESS_TOKEN: ${{ secrets.GITHUB_ACCESS_TOKEN }}

      - name: Push to deployment repo
        uses: cpina/github-action-push-to-another-repository@main
        env:
          SSH_DEPLOY_KEY: ${{ secrets.SSH_DEPLOY_KEY }}
          API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
        with:
          source-directory: "new_deployment"
          destination-github-username: "mlakewood"
          destination-repository-name: "argocd-test-deploy-repo"
          user-email: underplank+deployments@gmail.com
          target-branch: main

name: Deploy to ECR

on:
  push:
    branches: [main]

jobs:
  build:
    name: Build and Publish Image
    runs-on: self-hosted

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set outputs
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-southeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: argocd-test
          IMAGE_TAG: simple-flask-test
          GIT_SHA: ${{ steps.vars.outputs.sha_short }}
          BRANCH_NAME: ${{ github.head_ref || github.ref_name }} 
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$BRANCH_NAME-$GIT_SHA .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$BRANCH_NAME-$GIT_SHA


  test:
    name: Test images
    runs-on: self-hosted
    steps:
      - name: Unit tests
        run: echo "looks like you havent run any tests??"

  deploy:
    name: deploy the container
    runs-on: self-hosted
    steps:
      - name: 'Kustomize Build'
        id: kustomize
        uses: karancode/kustomize-github-action@master
        with:
          kustomize_version: '4.5.7'
          kustomize_build_dir: 'deployment'
          kustomize_comment: true
          kustomize_output_file: "new_deployment/deployment.yaml"
        env:
          GITHUB_ACCESS_TOKEN: ${{ secrets.GITHUB_ACCESS_TOKEN }}

      - name: Push to deployment repo
        uses: cpina/github-action-push-to-another-repository@main
        env:
          SSH_DEPLOY_KEY: ${{ secrets.SSH_DEPLOY_KEY }}
          API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
        with:
          source-directory: "new_deployment"
          destination-github-username: 'mlakewood'
          destination-repository-name: 'argocd-test-deploy-repo'
          user-email: underplank+deployments@gmail.com
          target-branch: main
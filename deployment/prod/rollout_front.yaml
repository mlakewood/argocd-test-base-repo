apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: front-app
spec:
  replicas: 4
  strategy:
    canary:
      canaryService: front-app-canary
      canaryMetadata:
        labels:
          release: canary
      stableService: front-app
      stableMetadata:
        labels:
          release: stable
      trafficRouting:
        managedRoutes:
          - name: production
          - name: canary
      steps:
      - setCanaryScale:
          replicas: 1
          matchTrafficWeight: true
      - analysis:
          templates:
          - templateName: integration-tests
      - setWeight: 20
      - pause: {duration: 1m}
      - setWeight: 40
      - pause: {duration: 1m}
      - setWeight: 60
      - pause: {duration: 1m}
      - setWeight: 80
      - pause: {duration: 1m}
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: front-app
  template:
    metadata:
      labels:
        app: front-app
        instrumentation.opentelemetry.io/inject-python: "true"
    spec:
      securityContext:
        runAsGroup: 1000
        runAsUser: 1000
      containers:
        - name: front-app
          image: front-app
          ports:
            - name: webserver
              containerPort: 5000
          env:
          - name: APP_BACK_APP_HOST
            value: "back-app.python-demo-app.svc.cluster.local"
          - name: APP_BACK_APP_PORT
            value: "8081"
          resources:
            requests:
              memory: 128Mi
              cpu: 100m
            limits:
              memory: 256Mi
              cpu: 200m
          readinessProbe:
            initialDelaySeconds: 10
            httpGet:
              port: webserver
              path: /health